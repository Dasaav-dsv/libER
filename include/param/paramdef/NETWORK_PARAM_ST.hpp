/* This file was automatically generated from XML paramdefs. */
#pragma once

namespace from {
namespace paramdef {

struct NETWORK_PARAM_ST {
    float signVerticalOffset{ 0 };
    float maxSignPosCorrectionRange{ 0 };
    float summonTimeoutTime{ 0 };
    unsigned char pad_0[4];
    float signPuddleActiveMessageIntervalSec{ 1 };
    float keyGuideHeight_0{ 1 };
    float reloadSignIntervalTime1{ 1 };
    float reloadSignIntervalTime2{ 1 };
    unsigned int reloadSignTotalCount_0{ 1 };
    unsigned int reloadSignCellCount_0{ 1 };
    float updateSignIntervalTime{ 1 };
    float basicExclusiveRange_0{ 1 };
    float basicExclusiveHeight_0{ 1 };
    float previewChrWaitingTime{ 1 };
    float signVisibleRange_0{ 1 };
    unsigned int cellGroupHorizontalRange_0{ 1 };
    unsigned int cellGroupTopRange_0{ 1 };
    unsigned int cellGroupBottomRange_0{ 1 };
    float minWhitePhantomLimitTimeScale{ 1 };
    float minSmallPhantomLimitTimeScale{ 1 };
    float whiteKeywordLimitTimeScale{ 1 };
    float smallKeywordLimitTimeScale{ 1 };
    float blackKeywordLimitTimeScale{ 1 };
    float dragonKeywordLimitTimeScale{ 1 };
    unsigned int singGetMax{ 1 };
    float signDownloadSpan{ 1 };
    float signUpdateSpan{ 1 };
    unsigned char signPad[4];
    unsigned int maxBreakInTargetListCount{ 1 };
    float breakInRequestIntervalTimeSec{ 4 };
    float breakInRequestTimeOutSec{ 20 };
    unsigned char pad_1[4];
    float keyGuideRange{ 1 };
    float keyGuideHeight_1{ 1 };
    unsigned int reloadSignTotalCount_1{ 1 };
    unsigned int reloadNewSignCellCount{ 1 };
    unsigned int reloadRandomSignCellCount{ 1 };
    unsigned int maxSignTotalCount_0{ 1 };
    unsigned int maxSignCellCount_0{ 1 };
    float basicExclusiveRange_1{ 1 };
    float basicExclusiveHeight_1{ 1 };
    float signVisibleRange_1{ 1 };
    unsigned int maxWriteSignCount{ 1 };
    unsigned int maxReadSignCount{ 1 };
    float reloadSignIntervalTime_0{ 1 };
    unsigned int cellGroupHorizontalRange_1{ 1 };
    unsigned int cellGroupTopRange_1{ 1 };
    unsigned int cellGroupBottomRange_1{ 1 };
    unsigned int lifeTime_0{ 1 };
    float downloadSpan_0{ 0 };
    float downloadEvaluationSpan{ 0 };
    unsigned char pad_2[4];
    float deadingGhostStartPosThreshold{ 1 };
    float keyGuideHeight_2{ 1 };
    float keyGuideRangePlayer{ 1 };
    float keyGuideHeightPlayer{ 1 };
    unsigned int reloadSignTotalCount_2{ 1 };
    unsigned int reloadSignCellCount_1{ 1 };
    unsigned int maxSignTotalCount_1{ 1 };
    unsigned int maxSignCellCount_1{ 1 };
    float reloadSignIntervalTime_1{ 1 };
    float signVisibleRange_2{ 1 };
    float basicExclusiveRange_2{ 1 };
    float basicExclusiveHeight_2{ 1 };
    unsigned int cellGroupHorizontalRange_2{ 1 };
    unsigned int cellGroupTopRange_2{ 1 };
    unsigned int cellGroupBottomRange_2{ 1 };
    unsigned int lifeTime_1{ 1 };
    float recordDeadingGhostTotalTime{ 0 };
    float recordDeadingGhostMinTime{ 5 };
    float downloadSpan_1{ 0 };
    float statueCreatableDistance{ 80 };
    unsigned int reloadGhostTotalCount{ 1 };
    unsigned int reloadGhostCellCount{ 1 };
    unsigned int maxGhostTotalCount{ 1 };
    float distanceOfBeginRecordVersus{ 1 };
    float distanceOfEndRecordVersus{ 1 };
    float updateWanderGhostIntervalTime{ 1 };
    float updateVersusGhostIntervalTime{ 1 };
    float recordWanderingGhostTime{ 1 };
    float recordWanderingGhostMinTime{ 5 };
    float updateBonfireGhostIntervalTime{ 1 };
    float replayGhostRangeOnView{ 1 };
    float replayGhostRangeOutView{ 1 };
    float replayBonfireGhostTime{ 1 };
    float minBonfireGhostValidRange{ 1 };
    float maxBonfireGhostValidRange{ 1 };
    float minReplayIntervalTime{ 1 };
    float maxReplayIntervalTime{ 1 };
    float reloadGhostIntervalTime{ 1 };
    unsigned int cellGroupHorizontalRange_3{ 1 };
    unsigned int cellGroupTopRange_3{ 1 };
    int replayBonfirePhantomParamIdForCodename{ 0 };
    float replayBonfireModeRange{ 1 };
    int replayBonfirePhantomParamId{ 0 };
    unsigned char ghostpad[4];
    float reloadVisitListCoolTime{ 1 };
    unsigned int maxCoopBlueSummonCount{ 1 };
    unsigned int maxBellGuardSummonCount{ 1 };
    unsigned int maxVisitListCount{ 1 };
    float reloadSearch_CoopBlue_Min{ 0 };
    float reloadSearch_CoopBlue_Max{ 0 };
    float reloadSearch_BellGuard_Min{ 0 };
    float reloadSearch_BellGuard_Max{ 0 };
    float reloadSearch_RatKing_Min{ 0 };
    float reloadSearch_RatKing_Max{ 0 };
    unsigned char visitpad00[8];
    float srttMaxLimit{ 1000 };
    float srttMeanLimit{ 1000 };
    float srttMeanDeviationLimit{ 1000 };
    float darkPhantomLimitBoostTime{ 1000 };
    float darkPhantomLimitBoostScale{ 1000 };
    float multiplayDisableLifeTime{ 1 };
    unsigned char abyssMultiplayLimit{ 10 };
    unsigned char phantomWarpMinimumTime{ 5 };
    unsigned char phantomReturnDelayTime{ 5 };
    unsigned char terminateTimeoutTime{ 30 };
    unsigned short penaltyPointLanDisconnect{ 0 };
    unsigned short penaltyPointSignout{ 0 };
    unsigned short penaltyPointReboot{ 0 };
    unsigned short penaltyPointBeginPenalize{ 0 };
    float penaltyForgiveItemLimitTime{ 0 };
    unsigned char allAreaSearchRate_CoopBlue{ 0 };
    unsigned char allAreaSearchRate_VsBlue{ 0 };
    unsigned char allAreaSearchRate_BellGuard{ 0 };
    unsigned char bloodMessageEvalHealRate{ 100 };
    unsigned int smallGoldSuccessHostRewardId{ 0 };
    float doorInvalidPlayAreaExtents{ 1 };
    unsigned char signDisplayMax{ 10 };
    unsigned char bloodStainDisplayMax{ 7 };
    unsigned char bloodMessageDisplayMax{ 3 };
    unsigned char pad00[9];
    unsigned char pad10[32];
    float summonMessageInterval{ 1 };
    float hostRegisterUpdateTime{ 1 };
    float hostTimeOutTime{ 1 };
    float guestUpdateTime{ 1 };
    float guestPlayerNoTimeOutTime{ 1 };
    float hostPlayerNoTimeOutTime{ 1 };
    unsigned int requestSearchQuickMatchLimit{ 1 };
    unsigned int AvatarMatchSearchMax{ 1 };
    unsigned int BattleRoyalMatchSearchMin{ 1 };
    unsigned int BattleRoyalMatchSearchMax{ 1 };
    unsigned char pad11[8];
    unsigned int VisitorListMax{ 1 };
    float VisitorTimeOutTime{ 1 };
    float DownloadSpan_2{ 1 };
    float VisitorGuestRequestMessageIntervalSec{ 1 };
    float wanderGhostIntervalLifeTime{ 40 };
    unsigned char pad13[12];
    float YellowMonkTimeOutTime{ 1 };
    float YellowMonkDownloadSpan{ 1 };
    float YellowMonkOverallFlowTimeOutTime{ 1 };
    unsigned char pad14_0[4];
    unsigned char pad14_1[8];
};

}; // namespace paramdef
}; // namespace from

static_assert(sizeof(from::paramdef::NETWORK_PARAM_ST) == 632,
    "NETWORK_PARAM_ST paramdef size does not match detected size");
