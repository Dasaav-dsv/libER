/* This file was automatically generated from XML paramdefs. */
#pragma once

namespace from {
namespace paramdefs {

struct EQUIP_PARAM_WEAPON_ST {
    bool disableParam_NT : 1 { false };
    unsigned char disableParamReserve1 : 7;
    unsigned char disableParamReserve2[3];
    int behaviorVariationId{ 0 };
    int sortId{ 0 };
    unsigned int wanderingEquipId{ 0 };
    float weight{ 1 };
    float weaponWeightRate{ 0 };
    int fixPrice{ 0 };
    int reinforcePrice{ 0 };
    int sellValue{ 0 };
    float correctStrength{ 0 };
    float correctAgility{ 0 };
    float correctMagic{ 0 };
    float correctFaith{ 0 };
    float physGuardCutRate{ 0 };
    float magGuardCutRate{ 0 };
    float fireGuardCutRate{ 0 };
    float thunGuardCutRate{ 0 };
    int spEffectBehaviorId0{ -1 };
    int spEffectBehaviorId1{ -1 };
    int spEffectBehaviorId2{ -1 };
    int residentSpEffectId{ -1 };
    int residentSpEffectId1{ -1 };
    int residentSpEffectId2{ -1 };
    int materialSetId{ -1 };
    int originEquipWep{ -1 };
    int originEquipWep1{ -1 };
    int originEquipWep2{ -1 };
    int originEquipWep3{ -1 };
    int originEquipWep4{ -1 };
    int originEquipWep5{ -1 };
    int originEquipWep6{ -1 };
    int originEquipWep7{ -1 };
    int originEquipWep8{ -1 };
    int originEquipWep9{ -1 };
    int originEquipWep10{ -1 };
    int originEquipWep11{ -1 };
    int originEquipWep12{ -1 };
    int originEquipWep13{ -1 };
    int originEquipWep14{ -1 };
    int originEquipWep15{ -1 };
    float weakA_DamageRate{ 1 };
    float weakB_DamageRate{ 1 };
    float weakC_DamageRate{ 1 };
    float weakD_DamageRate{ 1 };
    float sleepGuardResist_MaxCorrect{ 0 };
    float madnessGuardResist_MaxCorrect{ 0 };
    float saWeaponDamage{ 0 };
    unsigned short equipModelId{ 0 };
    unsigned short iconId{ 0 };
    unsigned short durability{ 100 };
    unsigned short durabilityMax{ 100 };
    unsigned short attackThrowEscape{ 0 };
    short parryDamageLife{ -1 };
    unsigned short attackBasePhysics{ 100 };
    unsigned short attackBaseMagic{ 100 };
    unsigned short attackBaseFire{ 100 };
    unsigned short attackBaseThunder{ 100 };
    unsigned short attackBaseStamina{ 100 };
    short guardAngle{ 0 };
    float saDurability{ 0 };
    short staminaGuardDef{ 0 };
    short reinforceTypeId{ 0 };
    short trophySGradeId{ -1 };
    short trophySeqId{ -1 };
    short throwAtkRate{ 0 };
    short bowDistRate{ 0 };
    unsigned char equipModelCategory{ 7 };
    unsigned char equipModelGender{ 0 };
    unsigned char weaponCategory{ 0 };
    unsigned char wepmotionCategory{ 0 };
    unsigned char guardmotionCategory{ 0 };
    unsigned char atkMaterial{ 0 };
    unsigned short defSeMaterial1{ 0 };
    unsigned char correctType_Physics{ 0 };
    unsigned char spAttribute{ 0 };
    unsigned short spAtkcategory{ 0 };
    unsigned char wepmotionOneHandId{ 0 };
    unsigned char wepmotionBothHandId{ 0 };
    unsigned char properStrength{ 0 };
    unsigned char properAgility{ 0 };
    unsigned char properMagic{ 0 };
    unsigned char properFaith{ 0 };
    unsigned char overStrength{ 0 };
    unsigned char attackBaseParry{ 0 };
    unsigned char defenseBaseParry{ 0 };
    unsigned char guardBaseRepel{ 0 };
    unsigned char attackBaseRepel{ 0 };
    signed char guardCutCancelRate{ 0 };
    signed char guardLevel{ 0 };
    signed char slashGuardCutRate{ 0 };
    signed char blowGuardCutRate{ 0 };
    signed char thrustGuardCutRate{ 0 };
    signed char poisonGuardResist{ 0 };
    signed char diseaseGuardResist{ 0 };
    signed char bloodGuardResist{ 0 };
    signed char curseGuardResist{ 0 };
    unsigned char atkAttribute{ 0 };
    bool rightHandEquipable : 1 { false };
    bool leftHandEquipable : 1 { false };
    bool bothHandEquipable : 1 { false };
    bool arrowSlotEquipable : 1 { false };
    bool boltSlotEquipable : 1 { false };
    bool enableGuard : 1 { false };
    bool enableParry : 1 { false };
    bool enableMagic : 1 { false };
    bool enableSorcery : 1 { false };
    bool enableMiracle : 1 { false };
    bool enableVowMagic : 1 { false };
    bool isNormalAttackType : 1 { false };
    bool isBlowAttackType : 1 { false };
    bool isSlashAttackType : 1 { false };
    bool isThrustAttackType : 1 { false };
    bool isEnhance : 1 { false };
    bool isHeroPointCorrect : 1 { false };
    bool isCustom : 1 { false };
    bool disableBaseChangeReset : 1 { false };
    bool disableRepair : 1 { false };
    bool isDarkHand : 1 { false };
    bool simpleModelForDlc : 1 { false };
    bool lanternWep : 1 { false };
    bool isVersusGhostWep : 1 { false };
    unsigned char baseChangeCategory : 6 { 0 };
    bool isDragonSlayer : 1 { false };
    bool isDeposit : 1 { false };
    bool disableMultiDropShare : 1 { false };
    bool isDiscard : 1 { false };
    bool isDrop : 1 { false };
    bool showLogCondType : 1 { true };
    bool enableThrow : 1 { false };
    unsigned char showDialogCondType : 2 { 2 };
    bool disableGemAttr : 1 { false };
    unsigned short defSfxMaterial1{ 0 };
    unsigned char wepCollidableType0{ 1 };
    unsigned char wepCollidableType1{ 1 };
    unsigned char postureControlId_Right{ 0 };
    unsigned char postureControlId_Left{ 0 };
    int traceSfxId0{ -1 };
    int traceDmyIdHead0{ -1 };
    int traceDmyIdTail0{ -1 };
    int traceSfxId1{ -1 };
    int traceDmyIdHead1{ -1 };
    int traceDmyIdTail1{ -1 };
    int traceSfxId2{ -1 };
    int traceDmyIdHead2{ -1 };
    int traceDmyIdTail2{ -1 };
    int traceSfxId3{ -1 };
    int traceDmyIdHead3{ -1 };
    int traceDmyIdTail3{ -1 };
    int traceSfxId4{ -1 };
    int traceDmyIdHead4{ -1 };
    int traceDmyIdTail4{ -1 };
    int traceSfxId5{ -1 };
    int traceDmyIdHead5{ -1 };
    int traceDmyIdTail5{ -1 };
    int traceSfxId6{ -1 };
    int traceDmyIdHead6{ -1 };
    int traceDmyIdTail6{ -1 };
    int traceSfxId7{ -1 };
    int traceDmyIdHead7{ -1 };
    int traceDmyIdTail7{ -1 };
    unsigned short defSfxMaterial2{ 0 };
    unsigned short defSeMaterial2{ 0 };
    int absorpParamId{ -1 };
    float toughnessCorrectRate{ 0 };
    bool isValidTough_ProtSADmg : 1 { false };
    bool isDualBlade : 1 { false };
    bool isAutoEquip : 1 { false };
    bool isEnableEmergencyStep : 1 { false };
    bool invisibleOnRemo : 1 { false };
    unsigned char unk1 : 3;
    unsigned char correctType_Magic{ 0 };
    unsigned char correctType_Fire{ 0 };
    unsigned char correctType_Thunder{ 0 };
    float weakE_DamageRate{ 1 };
    float weakF_DamageRate{ 1 };
    float darkGuardCutRate{ 0 };
    unsigned short attackBaseDark{ 0 };
    unsigned char correctType_Dark{ 0 };
    unsigned char correctType_Poison{ 0 };
    unsigned char sortGroupId{ 255 };
    unsigned char atkAttribute2{ 0 };
    signed char sleepGuardResist{ 0 };
    signed char madnessGuardResist{ 0 };
    unsigned char correctType_Blood{ 0 };
    unsigned char properLuck{ 0 };
    signed char freezeGuardResist{ 0 };
    unsigned char autoReplenishType{ 0 };
    int swordArtsParamId{ 0 };
    float correctLuck{ 0 };
    unsigned int arrowBoltEquipId{ 0 };
    unsigned char DerivationLevelType{ 0 };
    unsigned char enchantSfxSize{ 0 };
    unsigned short wepType{ 0 };
    float physGuardCutRate_MaxCorrect{ 0 };
    float magGuardCutRate_MaxCorrect{ 0 };
    float fireGuardCutRate_MaxCorrect{ 0 };
    float thunGuardCutRate_MaxCorrect{ 0 };
    float darkGuardCutRate_MaxCorrect{ 0 };
    float poisonGuardResist_MaxCorrect{ 0 };
    float diseaseGuardResist_MaxCorrect{ 0 };
    float bloodGuardResist_MaxCorrect{ 0 };
    float curseGuardResist_MaxCorrect{ 0 };
    float freezeGuardResist_MaxCorrect{ 0 };
    float staminaGuardDef_MaxCorrect{ 0 };
    int residentSfxId_1{ -1 };
    int residentSfxId_2{ -1 };
    int residentSfxId_3{ -1 };
    int residentSfxId_4{ -1 };
    int residentSfx_DmyId_1{ -1 };
    int residentSfx_DmyId_2{ -1 };
    int residentSfx_DmyId_3{ -1 };
    int residentSfx_DmyId_4{ -1 };
    float staminaConsumptionRate{ 1 };
    float vsPlayerDmgCorrectRate_Physics{ 1 };
    float vsPlayerDmgCorrectRate_Magic{ 1 };
    float vsPlayerDmgCorrectRate_Fire{ 1 };
    float vsPlayerDmgCorrectRate_Thunder{ 1 };
    float vsPlayerDmgCorrectRate_Dark{ 1 };
    float vsPlayerDmgCorrectRate_Poison{ 1 };
    float vsPlayerDmgCorrectRate_Blood{ 1 };
    float vsPlayerDmgCorrectRate_Freeze{ 1 };
    int attainmentWepStatusStr{ -1 };
    int attainmentWepStatusDex{ -1 };
    int attainmentWepStatusMag{ -1 };
    int attainmentWepStatusFai{ -1 };
    int attainmentWepStatusLuc{ -1 };
    int attackElementCorrectId{ 0 };
    int saleValue{ -1 };
    unsigned char reinforceShopCategory{ 0 };
    unsigned char maxArrowQuantity{ 1 };
    bool residentSfx_1_IsVisibleForHang : 1 { false };
    bool residentSfx_2_IsVisibleForHang : 1 { false };
    bool residentSfx_3_IsVisibleForHang : 1 { false };
    bool residentSfx_4_IsVisibleForHang : 1 { false };
    bool isSoulParamIdChange_model0 : 1 { true };
    bool isSoulParamIdChange_model1 : 1 { true };
    bool isSoulParamIdChange_model2 : 1 { true };
    bool isSoulParamIdChange_model3 : 1 { true };
    signed char wepSeIdOffset{ 0 };
    int baseChangePrice{ 0 };
    short levelSyncCorrectId{ -1 };
    unsigned char correctType_Sleep{ 0 };
    unsigned char correctType_Madness{ 0 };
    unsigned char rarity{ 0 };
    unsigned char gemMountType{ 0 };
    unsigned short wepRegainHp{ 0 };
    int spEffectMsgId0{ -1 };
    int spEffectMsgId1{ -1 };
    int spEffectMsgId2{ -1 };
    int originEquipWep16{ -1 };
    int originEquipWep17{ -1 };
    int originEquipWep18{ -1 };
    int originEquipWep19{ -1 };
    int originEquipWep20{ -1 };
    int originEquipWep21{ -1 };
    int originEquipWep22{ -1 };
    int originEquipWep23{ -1 };
    int originEquipWep24{ -1 };
    int originEquipWep25{ -1 };
    float vsPlayerDmgCorrectRate_Sleep{ 1 };
    float vsPlayerDmgCorrectRate_Madness{ 1 };
    float saGuardCutRate{ 0 };
    unsigned char defMaterialVariationValue{ 0 };
    unsigned char spAttributeVariationValue{ 0 };
    short stealthAtkRate{ 0 };
    float vsPlayerDmgCorrectRate_Disease{ 1 };
    float vsPlayerDmgCorrectRate_Curse{ 1 };
    unsigned char pad[8];
};

}; // namespace paramdefs
}; // namespace from

static_assert(sizeof(from::paramdefs::EQUIP_PARAM_WEAPON_ST) == 664,
    "EQUIP_PARAM_WEAPON_ST paramdef size does not match detected size");
